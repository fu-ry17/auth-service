---
- hosts: dev
  become: true
  vars:
    workspace_dir: "{{ workspace_dir | default(ansible_env.WORKSPACE) }}"
    remote_workspace: "/opt/jenkins/workspace/auth-service"

  tasks:
    - name: Create remote workspace directory
      file:
        path: "{{ remote_workspace }}"
        state: directory
        mode: '0755'
        owner: ubuntu
        group: ubuntu

    - name: Synchronize workspace
      synchronize:
        src: "{{ workspace_dir }}/"
        dest: "{{ remote_workspace }}"
        rsync_opts:
          - "--exclude=.git"
      become: no

    - name: Set jenkins ownership and make gradlew executable
      file:
        path: "{{ item.path }}"
        state: "{{ item.state | default('file') }}"
        recurse: "{{ item.recurse | default(omit) }}"
        owner: jenkins
        group: jenkins
        mode: "{{ item.mode | default(omit) }}"
      with_items:
        - { path: "{{ remote_workspace }}", state: directory, recurse: yes }
        - { path: "{{ remote_workspace }}/gradlew", mode: '0755' }

    - name: Run Gradle tests
      shell: |
        sudo -u jenkins ./gradlew clean test --build-cache --quiet
      args:
        chdir: "{{ remote_workspace }}"
      register: test_result
      ignore_errors: yes

    - name: Display test summary
      debug:
        msg: "Tests {{ 'PASSED' if test_result.rc == 0 else 'FAILED' }}"

    - name: Run SonarQube analysis
      shell: |
        sudo -u jenkins ./gradlew sonar --quiet
      args:
        chdir: "{{ remote_workspace }}"
      environment:
        SONAR_TOKEN: "{{ sonar_token | default('') }}"

    - name: Wait for quality gate
      shell: |
        sleep 10
        curl -s -u "{{ sonar_token | default('') }}:" "{{ sonar_url }}/api/qualitygates/project_status?projectKey={{ project_key }}" | grep -o '"status":"[^"]*"' | cut -d'"' -f4
      register: quality_gate_result
      until: quality_gate_result.stdout == "OK"
      retries: 5
      delay: 5
      ignore_errors: yes

    - name: Get application version
      shell: |
        sudo -u jenkins ./gradlew properties -q | grep '^version:' | awk '{print $2}'
      args:
        chdir: "{{ remote_workspace }}"
      register: version_result

    - name: Display version
      debug:
        msg: "Version: {{ version_result.stdout | trim }}"
    