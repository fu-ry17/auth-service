---
- hosts: dev
  become: true
  vars:
    env_type: "{{ env_type }}"
    branch_name: "{{ branch_name | default('develop') }}"
    app_name: "{{ app_name }}"
    app_version: "{{ app_version }}"
    k8s_secret: "{{ k8s_secret | default('k8sonNewDevNS-Dev') }}"
    k8s_api: "{{ k8s_api | default('https://10.0.3.149:6443') }}"
    k8s_domain: "{{ k8s_domain | default('janzi.agencify.insure') }}"
    k8s_route: "{{ k8s_route | default('/api') }}"
    docker_registry: "{{ docker_registry }}"

  tasks:
    - name: Print deployment info
      debug:
        msg: |
          ==========================================
          Starting deployment to {{ env_type }} environment:
          - Branch: {{ branch_name }}
          - Application: {{ app_name }}
          - Version: {{ app_version }}
          - Domain: {{ k8s_domain }}
          - Route: {{ k8s_route }}
          ==========================================

    - name: Deploy to non-prod environment
      block:
        - name: Check Git status
          shell: git status
          args:
            chdir: /home/ubuntu/agencify-backend
          register: git_status
          when: env_type == 'dev'

        - name: Show git status results
          debug:
            msg: |
              ==========================================
              Git Status Output:
              {{ git_status.stdout_lines | default([]) }}
              ==========================================
  
        - name: Checkout branch
          shell: git checkout {{ branch_name }}
          args:
            chdir: /home/ubuntu/agencify-backend
          register: git_checkout
          when: env_type == 'dev'

        - name: Show checkout results
          debug:
            msg: |
              ==========================================
              Git Checkout Results:
              {{ git_checkout.stdout_lines | default([]) }}
              ==========================================

        - name: Fetch latest changes from remote
          shell: git fetch
          args:
            chdir: /home/ubuntu/agencify-backend
          register: git_fetch
          when: env_type == 'dev'

        - name: Show git fetch results
          debug:
            msg: |
              ==========================================
              Git Fetch Results:
              {{ git_fetch.stdout_lines | default([]) }}
              ==========================================
        
        - name: Perform git pull with rebase
          shell: git pull --rebase
          args:
            chdir: /home/ubuntu/agencify-backend
          register: git_pull
          when: env_type == 'dev'

        - name: Show git pull results
          debug:
            msg: |
              ==========================================
              Git Pull (Rebase) Results:
              {{ git_pull.stdout_lines | default([]) }}
              ==========================================
        
        - name: Apply stashed changes (if any)
          shell: git stash pop
          args:
            chdir: /home/ubuntu/agencify-backend
          when: env_type == 'dev' and git_status.stdout_lines | search("Changes not staged for commit")

        - name: Start new containers
          shell: sudo docker compose pull
          args:
            chdir: /home/ubuntu/agencify-backend
          register: docker_start
          when: env_type == 'dev'

        - name: Start new containers
          shell: sudo docker compose up -d
          args:
            chdir: /home/ubuntu/agencify-backend
          register: docker_start
          when: env_type == 'dev'

        - name: Show container start results
          debug:
            msg: |
              ==========================================
              Starting Containers:
              {{ docker_start.stdout_lines | default([]) }}
              ==========================================

        - name: Check container status
          shell: docker compose ps
          args:
            chdir: /home/ubuntu/agencify-backend
          register: docker_status
          when: env_type == 'dev'

        - name: Show container status
          debug:
            msg: |
              ==========================================
              Container Status:
              {{ docker_status.stdout_lines | default([]) }}
              ==========================================

    - name: Show deployment completion
      debug:
        msg: |
          ==========================================
          Deployment completed successfully!
          Environment: {{ env_type }}
          Branch: {{ branch_name }}
          Time: {{ ansible_date_time.iso8601 }}
          ==========================================
