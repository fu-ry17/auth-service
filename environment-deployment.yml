---
- hosts: dev
  become: true
  vars:
    env_type: "{{ env_type }}"
    branch_name: "{{ branch_name | default('develop') }}"
    app_name: "{{ app_name }}"
    app_version: "{{ app_version }}"
    k8s_secret: "{{ k8s_secret | default('k8sonNewDevNS-Dev') }}"
    k8s_api: "{{ k8s_api | default('https://10.0.3.149:6443') }}"
    k8s_domain: "{{ k8s_domain | default('janzi.agencify.insure') }}"
    k8s_route: "{{ k8s_route | default('/api') }}"
    docker_registry: "{{ docker_registry }}"

  tasks:
    - name: Print deployment info
      debug:
        msg: |
          Starting deployment to {{ env_type }} environment:
          - Branch: {{ branch_name }}
          - Application: {{ app_name }}
          - Version: {{ app_version }}
          - Domain: {{ k8s_domain }}
          - Route: {{ k8s_route }}

    - name: Deploy to non-prod environment
      block:
        - name: Deploy to dev
          when: env_type == 'dev'
          shell: |
            echo "Starting deployment at $(date)"
            cd /home/ubuntu/agencify-backend
            
            echo "Current Git status:"
            git status
            
            echo "Fetching latest changes..."
            git fetch
            
            echo "Checking out branch {{ branch_name }}..."
            git checkout {{ branch_name }}
            
            echo "Pulling latest changes..."
            git pull origin {{ branch_name }} --rebase
            
            echo "Git status after pull:"
            git status
            
            echo "Starting new containers..."
            sudo docker compose up -d
            
            echo "Container status:"
            sudo docker compose ps
            
            echo "Deployment completed at $(date)"
          register: dev_deploy

        - name: Show deployment status
          debug:
            msg: |
              Deployment Status:
              Start Time: {{ dev_deploy.start | default('Unknown') }}
              End Time: {{ dev_deploy.end | default('Unknown') }}
              Duration: {{ dev_deploy.delta | default('Unknown') }}
              
              Output:
              {{ dev_deploy.stdout_lines | default([]) }}
          when: dev_deploy is success

        - name: Show deployment errors
          debug:
            msg: |
              Deployment Failed:
              Error: {{ dev_deploy.stderr_lines | default([]) }}
              Return Code: {{ dev_deploy.rc | default('Unknown') }}
          when: dev_deploy is failed
          failed_when: true